{"version":3,"sources":["components/Table/Table.js","components/Timer/Timer.js","App.js","index.js"],"names":["Table","props","state","table","intervalId","canv","React","createRef","length","cols","Math","trunc","width","rows","height","this","setState","createTable","setInterval","timer","bind","clearInterval","lifeCicle","r","c","sum","i","j","col","nextTable","make2DArray","current","count","countNeighbords","drawTable","l","ctx","getContext","fillStyle","fillRect","floor","random","arr","Array","fill","map","el","ref","Component","Timer","currentCount","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27608a5e.chunk.js","sourcesContent":["import React from 'react';\nimport './table.css'\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      table: [],\n    }\n    this.intervalId = 0;\n    this.canv = React.createRef();\n    this.length = 5;\n    this.cols = Math.trunc(this.props.width / this.length);\n    this.rows = Math.trunc(this.props.height / this.length);\n  }\n  componentDidMount() {\n    this.setState({\n      table: this.createTable(),\n    });\n    this.intervalId = setInterval(this.timer.bind(this), 100)\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n  timer() {\n    this.setState({\n      table: this.lifeCicle(),\n    });\n  }\n  countNeighbords(table, r, c) {\n    let sum = 0;\n    for (let i = -1; i < 2; i += 1) {\n      for (let j = -1; j < 2; j += 1) {\n        let col = (c + j + this.cols) % this.cols;\n        let row = (r + i + this.rows) % this.rows;\n        sum += table[row][col];\n      }\n    }\n    sum -= table[r][c];\n    return sum;\n  }\n  lifeCicle() {\n    const nextTable = this.make2DArray();\n    const table = this.state.table;\n    for (let r = 0; r < table.length; r += 1)\n      for (let c = 0; c < table[0].length; c += 1) {\n        const current = table[r][c];\n        const count = this.countNeighbords(table, r, c);\n        if (current === 0 && count === 3) {\n          nextTable[r][c] = 1;\n        } else if (current === 1 && (count < 2 || count > 3)) {\n          nextTable[r][c] = 0;\n        } else {\n          nextTable[r][c] = current;\n        }\n      }\n    this.drawTable(nextTable);\n    return nextTable;\n  }\n  createTable() {\n    const table = this.make2DArray();\n    this.drawTable(table)\n    return table;\n  }\n  drawTable(table) {\n    const l = this.length;\n    let ctx = this.canv.current.getContext(\"2d\");\n\n    for (let r = 0; r < table.length; r += 1)\n      for (let c = 0; c < table[0].length; c += 1)\n        if (table[r][c] === 0) {\n          ctx.fillStyle = 'white';\n          ctx.fillRect(c * l, r * l, l, l);\n        } else {\n          ctx.fillStyle = 'black';\n          ctx.fillRect(c * l, r * l, l, l);\n        }\n  }\n  random() {\n    return Math.floor(Math.random() * Math.floor(2))\n  }\n  make2DArray() {\n    let arr = (new Array(this.rows).fill(0))\n      .map(el => el = new Array(this.cols).fill(0));\n    for (let r = 0; r < arr.length; r += 1)\n      for (let c = 0; c < arr[0].length; c += 1)\n        arr[r][c] = this.random();\n    return arr;\n  }\n  render() {\n    return (\n      <canvas ref={this.canv} width={this.props.width} height={this.props.height} />\n    )\n  }\n}\n\nexport default Table;\n","import React, { Component } from 'react';\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      currentCount: 0 \n    }\n  }\n  timer() {\n    this.setState({\n      currentCount: this.state.currentCount + 1\n    })\n    if (this.state.currentCount > 10000) {\n      clearInterval(this.intervalId);\n    }\n  }\n  componentDidMount() {\n    this.intervalId = setInterval(this.timer.bind(this), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n  render() {\n    return (\n      <div>{this.state.currentCount}</div>\n    );\n  }\n}\n\nexport default Timer;\n","import React from 'react';\nimport Table from './components/Table/Table'\nimport Timer from './components/Timer/Timer';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n        <h1>Игра «Жизнь»</h1>\n        <p>Игра «Жизнь» (англ. Conway's Game of Life) — клеточный автомат, <br/>придуманный английским математиком Джоном Конвеем в 1970 году.</p>\n        <Timer />\n        <Table width={600} height={600}/>\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}